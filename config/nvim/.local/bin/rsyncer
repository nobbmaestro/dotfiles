#!/bin/bash
#
# rsyncer
#
# This scripts wraps rsync utility and executes rsync command with
# arguments provided by the local configuration file.
#
# Written by Norbert Batiuk

DEFAULT_CONFIG_PATH="$(pwd)"
DEFAULT_FILENAME=".rsync.env"
DEFAULT_TIMEOUT="2"
DRY=0

usage() {
	cat <<EOF
usage: rsyncer [-h] [-p PATH] [-t TIMEOUT] [--dry]

Options:
  -p, --path PATH           Absolute path to the local configuration file (defaults to current working directory)
  -t, --timeout TIMEOUT     Custom timeout duration (default to ${DEFAULT_TIMEOUT} seconds)
  -h, --help                Show this help message and exit
  --dry                     Show generated command and exit

The configuration file '${DEFAULT_FILENAME}' should define the following shell variables:

Required variables:
  REMOTE_USER               The username on the remote system
  REMOTE_HOST               The hostname of the remote system
  REMOTE_PATH               The destination path on the remote system

Optional variables:
  LOCAL_PATH                The source path for sync (defaults to current working directory)
  IGNORE_PATH               A list of paths or patterns to ignore during sync
  REMOTE_PASSWD             Password to the remote server (requires sshpass)

Dependencies:
  sshpass (OPTIONAL)        Required if REMOTE_PASSWD is set
EOF
	exit 0
}

error() {
	echo "$1"
	exit 1
}

validate_arg() {
	[ -z "$1" ] && error "$2: missing argument"
}

while [[ $# -gt 0 ]]; do
	case $1 in
	-p | --path)
		validate_arg "$2" "--path"
		CONFIG_PATH="$2"
		shift
		;;
	-t | --timeout)
		validate_arg "$2" "--timeout"
		TIMEOUT="$2"
		shift
		;;
	-h | --help)
		usage
		;;
	--dry)
		DRY=1
		;;
	*)
		error "Unknown option: $1"
		;;
	esac
	shift
done

LOCAL_CONFIG="${CONFIG_PATH:-${DEFAULT_CONFIG_PATH%/}}/${DEFAULT_FILENAME%/}"

if [ ! -f "$LOCAL_CONFIG" ]; then
	error "Configuration file does not exist: $LOCAL_CONFIG"
fi

set -a
# shellcheck source=/dev/null
source "$LOCAL_CONFIG"
set +a

for var in REMOTE_USER REMOTE_HOST REMOTE_PATH; do
	[[ -z "${!var}" ]] && error "${LOCAL_CONFIG} does not contain: $var"
done

RSYNC_EXCLUDE=()
for exclude in "${IGNORE_PATH[@]}"; do
	RSYNC_EXCLUDE+=("--exclude" "${exclude}")
done

RSYNC_CMD=(
	"rsync"
	"--archive"
	"--timeout"
	"${TIMEOUT:-$DEFAULT_TIMEOUT}"
	"${RSYNC_EXCLUDE[@]}"
	"${LOCAL_PATH:-$DEFAULT_CONFIG_PATH}/"
	"${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}"
)

if [ -n "${REMOTE_PASSWD}" ]; then
	if ! command -v sshpass &>/dev/null; then
		error "Dependency not installed: sshpass"
	fi
	RSYNC_CMD=(
		"sshpass"
		"-p"
		"${REMOTE_PASSWD}"
		"${RSYNC_CMD[@]}"
	)
fi

if [ "$DRY" -ne "0" ]; then
	echo "Command:" "${RSYNC_CMD[@]}"
else
	"${RSYNC_CMD[@]}"
fi

exit $?
